trigger:
- main

stages:
- stage: Plan
  displayName: 'Terraform Plan'
  jobs:
  - job: TerraformPlan
    displayName: 'Terraform Plan'
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: TerraformInstaller@1
      inputs:
        terraformVersion: 'latest'
      displayName: 'Install Terraform'
    
    - script: |
        cd $(System.DefaultWorkingDirectory)/IaC/
        terraform fmt -check -recursive -diff
      displayName: 'Check Terraform Formatting'
    
    - script: |
        cd $(System.DefaultWorkingDirectory)/IaC/
        terraform init
      displayName: 'Terraform Init'
    
    - script: |
        cd $(System.DefaultWorkingDirectory)/IaC/
        terraform validate
      displayName: 'Terraform Validate'
    
    - script: |
        cd $(System.DefaultWorkingDirectory)/IaC/
        terraform plan -out=tfplan
      displayName: 'Terraform Plan (Save Plan)'
    
    - task: PublishPipelineArtifact@1
      inputs:
        artifactName: 'tf-plan-artifact'
        targetPath: '$(System.DefaultWorkingDirectory)/IaC/'
        publishLocation: 'pipeline'
      displayName: 'Publish Terraform Plan Artifact'

- stage: Apply
  displayName: 'Terraform Apply'
  jobs:
  - job: TerraformApply
    displayName: 'Terraform Apply'
    pool:
      vmImage: ubuntu-latest
    dependsOn: Plan
    steps:
    - task: TerraformInstaller@1
      inputs:
        terraformVersion: 'latest'
      displayName: 'Install Terraform'
    
    - script: |
        cd $(System.DefaultWorkingDirectory)/IaC/
        terraform init
      displayName: 'Terraform Init'
    
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'tf-plan-artifact'
        targetPath: '$(System.DefaultWorkingDirectory)/IaC/'
      displayName: 'Download Terraform Plan Artifact'
    
    - script: |
        cd $(System.DefaultWorkingDirectory)/IaC/
        terraform apply tfplan
      displayName: 'Terraform Apply'



  
    
