trigger:
- main

stages:
- stage: IaC_TF
  displayName: Terraform Infrastructure
  jobs:
  - job: Terraform
    displayName: Terraform Deployment
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: TerraformInstaller@1
      inputs:
        terraformVersion: 'latest'
      displayName: 'Terraform init'
    
    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/IaC/'
        backendServiceArm: 'AzLogin_because_i_dumb'
        backendAzureRmResourceGroupName: 'NSSFMsRG-smooth-sloth'
        backendAzureRmStorageAccountName: 'nssfmstorage'
        backendAzureRmContainerName: 'tf-state'
        backendAzureRmKey: 'tf/terraform.tfstate'
      displayName: 'Terraform init'

    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: '$(System.DefaultWorkingDirectory)/IaC/'
        environmentServiceNameAzureRM: 'AzLogin_because_i_dumb'
        commandOptions: '-out main.tfplan'
      displayName: 'Terraform plan'

    - task: PublishPipelineArtifact@1
      inputs:
        artifactName: 'tf-plan-artifact'
        targetPath: '$(System.DefaultWorkingDirectory)/IaC/'
        publishLocation: 'pipeline'
      displayName: 'Publish Terraform Plan Artifact'

- stage: Plan
  displayName: 'Plan'
  jobs:
  - job: TerraformPlan
    displayName: 'Terraform Plan'
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x'
        addToPath: true
    - script: |
        cd $(System.DefaultWorkingDirectory)/IaC/
        terraform fmt -check -recursive -diff
      displayName: 'Check Terraform Formatting'
    - script: |
        cd $(System.DefaultWorkingDirectory)/IaC/
        terraform init
      displayName: 'Terraform Init'
    - script: |
        cd $(System.DefaultWorkingDirectory)/IaC/
        terraform validate
      displayName: 'Terraform Validate'
    - script: |
        cd $(System.DefaultWorkingDirectory)/IaC/
        terraform plan -out main.tfplan
      displayName: 'Terraform Plan (Save Plan)'
    - task: PublishPipelineArtifact@1
      inputs:
        artifactName: 'tf-plan-artifact'
        targetPath: '$(System.DefaultWorkingDirectory)/IaC/'
        publishLocation: 'pipeline'
      displayName: 'Publish Terraform Plan Artifact'

- stage: Apply
  displayName: 'Apply (with manual approve)'
  jobs:
  - job: TerraformApply
    displayName: 'Terraform Apply'
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x'
        addToPath: true
    - script: |
        cd $(System.DefaultWorkingDirectory)/IaC/
        terraform init
      displayName: 'Terraform Init'
    - script: |
        cd $(System.DefaultWorkingDirectory)/IaC/
        terraform apply main.tfplan
      displayName: 'Terraform Apply'
    - task: PublishPipelineArtifact@1
      inputs:
        artifactName: 'kubeconfig-artifact'
        targetPath: '$(System.DefaultWorkingDirectory)/IaC/'
        publishLocation: 'pipeline'
      displayName: 'Publish kubeconfig Artifact'

   


