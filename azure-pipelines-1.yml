trigger:
- manual

stages:
- stage: IaC_TF
  displayName: Terraform Infrastructure
  jobs:
  - job: Terraform
    displayName: Terraform Deployment
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: TerraformInstaller@1
      inputs:
        terraformVersion: 'latest'
      displayName: 'Terraform init'
    
    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/IaC/'
        backendServiceArm: 'AzLogin_because_i_dumb'
        backendAzureRmResourceGroupName: 'NSSFMsRG-smooth-sloth'
        backendAzureRmStorageAccountName: 'nssfmstorage'
        backendAzureRmContainerName: 'tf-state'
        backendAzureRmKey: 'tf/terraform.tfstate'
      displayName: 'Terraform init'

    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: '$(System.DefaultWorkingDirectory)/IaC/'
        environmentServiceNameAzureRM: 'AzLogin_because_i_dumb'
        commandOptions: '-out main.tfplan'
      displayName: 'Terraform plan'

    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: '$(System.DefaultWorkingDirectory)/IaC/'
        environmentServiceNameAzureRM: 'AzLogin_because_i_dumb'
        commandOptions: 'main.tfplan'
      displayName: 'Terraform apply'
      
    - script: |
        # Извлекаем значения из Terraform output
        resource_group_name=$(terraform output resource_group_name)
        kubernetes_cluster_name=$(terraform output kubernetes_cluster_name)
        client_certificate=$(terraform output client_certificate)
        client_key=$(terraform output client_key)
        cluster_ca_certificate=$(terraform output cluster_ca_certificate)
        cluster_password=$(terraform output cluster_password)
        cluster_username=$(terraform output cluster_username)
        host=$(terraform output host)
        kube_config=$(terraform output kube_config)
        
        echo "resource_group_name=$resource_group_name" >> $(System.DefaultWorkingDirectory)/IaC/kubeconfig.yaml
        echo "kubernetes_cluster_name=$kubernetes_cluster_name" >> $(System.DefaultWorkingDirectory)/IaC/kubeconfig.yaml
        echo "client_certificate=$client_certificate" >> $(System.DefaultWorkingDirectory)/IaC/kubeconfig.yaml
        echo "client_key=$client_key" >> $(System.DefaultWorkingDirectory)/IaC/kubeconfig.yaml
        echo "cluster_ca_certificate=$cluster_ca_certificate" >> $(System.DefaultWorkingDirectory)/IaC/kubeconfig.yaml
        echo "cluster_password=$cluster_password" >> $(System.DefaultWorkingDirectory)/IaC/kubeconfig.yaml
        echo "cluster_username=$cluster_username" >> $(System.DefaultWorkingDirectory)/IaC/kubeconfig.yaml
        echo "host=$host" >> $(System.DefaultWorkingDirectory)/IaC/kubeconfig.yaml
        echo "$kube_config" >> $(System.DefaultWorkingDirectory)/IaC/kubeconfig.yaml
      displayName: 'Create Kubernetes config'

    - script: |
        az pipelines variable update --name KUBECONFIG --value "$(cat $(System.DefaultWorkingDirectory)/IaC/kubeconfig.yaml)"
      displayName: 'Update Kubernetes config variable'



    #- task: TerraformTaskV4@4
    #  inputs:
    #    workingDirectory: '$(System.DefaultWorkingDirectory)/IaC/'
    #    provider: 'azurerm'
    #    command: 'destroy'
    #    environmentServiceNameAzureRM: 'AzLogin_because_i_dumb'

   


