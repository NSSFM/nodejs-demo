trigger:
- main

stages:
- stage: IaC_TF
  displayName: Terraform Infrastructure
  jobs:
  - job: Terraform
    displayName: Terraform Deployment
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: TerraformInstaller@1
      inputs:
        terraformVersion: 'latest'
      displayName: 'Terraform init'
    
    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/IaC/'
        backendServiceArm: 'AzLogin_because_i_dumb'
        backendAzureRmResourceGroupName: 'NSSFMsRG-smooth-sloth'
        backendAzureRmStorageAccountName: 'nssfmstorage'
        backendAzureRmContainerName: 'tf-state'
        backendAzureRmKey: 'tf/terraform.tfstate'
      displayName: 'Terraform init'

    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: '$(System.DefaultWorkingDirectory)/IaC/'
        environmentServiceNameAzureRM: 'AzLogin_because_i_dumb'
        commandOptions: '-out main.tfplan'
      displayName: 'Terraform plan'

    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: '$(System.DefaultWorkingDirectory)/IaC/'
        environmentServiceNameAzureRM: 'AzLogin_because_i_dumb'
        commandOptions: 'main.tfplan'
      displayName: 'Terraform apply'

    #- task: TerraformTaskV4@4
    #  inputs:
    #    workingDirectory: '$(System.DefaultWorkingDirectory)/IaC/'
    #    provider: 'azurerm'
    #    command: 'destroy'
    #    environmentServiceNameAzureRM: 'AzLogin_because_i_dumb'
  
    - script: |
        kubectl config view -o json | jq -r '.clusters[0].cluster.server' > cluster_server.txt
        kubectl config view -o json | jq -r '.users[0].user.token' > user_token.txt
      displayName: 'Extract Kubeconfig Information'

    - script: |
        cluster_server=$(cat cluster_server.txt)
        user_token=$(cat user_token.txt)
        az devops service-endpoint k8s create --name "nssfmK8s2" --cluster-name "cluster-current-ladybird" --resource-group "NSSFMsRG-smooth-sloth" --cluster-server "$cluster_server" --user-token "$user_token"
      displayName: 'Create/Update Kubernetes Service Connection'
